rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user has teacher role
    // Using exists() to avoid circular dependency during signup
    function isTeacher() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Units collection rules
    match /units/{unitId} {
      // Allow read for all users (including unauthenticated students with teacher codes)
      allow read: if true;
      // Allow write for authenticated users (app logic will check teacher role)
      allow write: if isAuthenticated();
    }

    // Users collection rules
    match /users/{userId} {
      // Users can read and write their own data (essential for signup)
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      // Allow general read access for authenticated users
      allow read: if isAuthenticated();

      // Progress subcollection rules (legacy - may be removed)
      match /progress/{progressId} {
        // Users can read and write their own progress
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
        // Teachers can read all progress data
        allow read: if isTeacher();
      }
    }

    // Teacher assignments collection rules
    match /teacher_assignments/{teacherCode} {
      // Allow read access for anyone (needed for student teacher code validation)
      allow read: if true;
      // Allow write access for authenticated users
      allow write: if isAuthenticated();
    }

    // Teacher libraries collection rules
    match /teacher_libraries/{teacherId} {
      // Teachers can read and write their own library
      allow read, write: if isAuthenticated() && request.auth.uid == teacherId;
    }

    // Student progress collection rules (simplified)
    match /student_progress/{progressId} {
      // Allow read/write for authenticated users (app logic will check ownership)
      allow read, write: if isAuthenticated();
    }

    // Classes collection (for future expansion)
    match /classes/{classId} {
      // Allow read/write for authenticated users
      allow read, write: if isAuthenticated();
    }

    // Class members collection (for future expansion)
    match /class_members/{memberId} {
      // Allow read/write for authenticated users
      allow read, write: if isAuthenticated();
    }

    // Test collection (for connection testing)
    match /test/{document} {
      allow read, write: if isAuthenticated();
    }
  }
}
